make-nix help

Usage:
[0;31mmake[0m [1m<help|install|home|system|all|test>[0m
[[1;36mTGT_USER[0m[0;31m=[0m<user>]
[[1;36mTGT_HOST[0m[0;31m=[0m<host>]
[[1;36mTGT_TAGS[0m[0;31m=[0m<tag1>[0;31m,[0m<tag2>[0;31m,[0m<tag3>[0;31m,[0m...]
[[1;36mTGT_SYSTEM[0m[0;31m=[0m<system>]
[[1;36mTGT_SPEC[0m[0;31m=[0m<spc1>[0;31m,[0m<spc2>[0;31m,[0m<spc3>[0;31m,[0m...]
[[1;34mOPTION FLAGS[0m]

[1mMake targets:[0m
  [1mhelp[0m    - You are here.
  [1minstall[0m - Install Nix and/or Nix-Darwin. Will not execute on NixOS or Nix-Darwin systems.
  [1mhome[0m    - Build and activate a Home-manager configuration.
  [1msystem[0m  - Build and activate a NixOS or Nix-Darwin system configuration.
  [1mall[0m     - Execute both the system and home targets in that order.
  [1mtest[0m    - Check all flake configurations.

[1;36mConfiguration parameters:[0m
  [1;36mTGT_USER[0m    - User configuration (current user will be passed by default).
  [1;36mTGT_HOST[0m    - System configuration host (current hostname will be passed by default).
  [1;36mTGT_TAGS[0m    - User allows to customizing home-manager user configuration based on tags similar to specialisations for system configurations.
  [1;36mTGT_SYSTEM[0m  - System platform to target for builds: x86_64-linux, aarch64-linux, x86_64-darwin, or aarch64-darwin (current platform will be passed by default.)
  [1;36mTGT_SPEC[0m    - Comma separated list of NixOS system specialisation configurations (no spaces).

[1;34mOption flags[0m (These are boolean, assigning [1many truthy[0m value will enable them):
Truthy values are 1 yes Yes YES true True TRUE on On ON y Y

Install option flags (install):
  [1;34mDETERMINATE[0m[0;31m=[0mtrue  - Install Nix using the Determinate Systems installer.

  [1;34mNIX_DARWIN[0m[0;31m=[0mtrue   - Install Nix-Darwin for MacOS.

  [1;34mUSE_HOMEBREW[0m[0;31m=[0mtrue - Install Homebrew.

  [1;34mSINGLE_USER[0m[0;31m=[0mtrue  - Install Nix for single-user mode (default installer only).

  [1;34mUSE_CACHE[0m[0;31m=[0mtrue    - Set a additional cache server URLs to be used as substituters (cache.nixos.org is used by default). This option is defined in make.env as a comma separated list of URLs (no spaces) in order of precedence.

  [1;34mUSE_KEYS[0m[0;31m=[0mtrue     - Set additional trusted public keys for nix stores (cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= is used by default). This option is defined in make.env as comma separated list of Nix keyname:keyvalue pairs.

Configuration option flags (home|system|all):
  [1;34mDRY_RUN[0m[0;31m=[0mtrue      - Evaluate the new configuration but don't activate it.

  [1;34mUSE_HOMEBREW[0m[0;31m=[0mtrue - Configure Homebrew package options for Nix-Darwin configurations.

  [1;34mHOME_ALONE[0m[0;31m=[0mtrue   - Configure options for a system running home-manager without NixOS or Nix-Darwin (autodetects current system).

  [1;34mBOOT_SPEC[0m[0;31m=[0mtrue    - Set the default boot menu option to the [1mfirst[0m listed specialisation. (NOTE: Only supports systemd boot configurations.)

Additional option flags (any target):
  [1;34mKEEP_LOGS[0m[0;31m=[0mtrue    - Don't erase logs after operations (for debugging).

Usage examples:
  [1;32m- Install Nix using the default installer for single-user mode:
    [0;31mmake[0m [1minstall[0m [1;34mSINGLE_USER[0m[0;31m=[0mY

  [1;32m- Install Nix-Darwin using the Determinate Systems installer:
    [0;31mmake[0m [1minstall[0m [1;34mDETERMINATE[0m[0;31m=[0m1 [1;34mNIX_DARWIN[0m[0;31m=[0my

  [1;32m- Build and activate the home-manager configuration for the current user using a standalone home-manager configuration; autodetect hostname and system type:[0m
    [0;31mmake[0m [1mhome[0m [1;34mHOME_ALONE[0m[0;31m=[0mtrue

  [1;32m- Build and activate the current system's configuration; autodetect hostname and system platform:[0m
    [0;31mmake[0m [1msystem[0m

  [1;32m- Build and activate the standalone home-manager configuration for user sam on host xps-15, set the tags 'debian' and 'server', and build for an aarch64-linux platform:[0m
    [0;31mmake[0m [1mhome[0m [1;36muser[0m[0;31m=[0msam [1;36mhost[0m[0;31m=[0mxps-15 [1;36msystem[0m[0;31m=[0maarch64-linux [1;34mHOME_ALONE[0m[0;31m=[0m1 [1;36mtags[0m[0;31m=[0mdebian,server

  [1;32m- Rebuild and switch the system configuration for host workstation1; autodetect platform; build specialisation configurations for wayland and x11_egpu; set default boot menu selection to wayland:[0m
    [0;31mmake[0m [1msystem[0m [1;36mhost[0m[0;31m=[0mworkstation1 [1;36mspec[0m[0;31m=[0mwayland[0;31m,[0mx11_egpu [1;34mBOOT_SPEC[0m[0;31m=[0m1

  [1;32m- Rebuild and switch the current system's configuration and current user's home-manager configuration; autodetect all settings:[0m
    [0;31mmake[0m [1mall[0m

  [1;32m- Evaluate the current system's configuration and current user's home-manager config; autodetect all settings:[0m
    [0;31mmake[0m [1mall[0m [1;34mDRY_RUN[0m[0;31m=[0m1

  [1;32m- Run 'nix flake check' for all configurations (current system and user must have a valid configuration):[0m
    [0;31mmake[0m [1mtest[0m

