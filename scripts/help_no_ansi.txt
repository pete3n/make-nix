make-nix help

Usage:
make <help|install|home|system|all|test>
[TGT_USER=<user>]
[TGT_HOST=<host>]
[TGT_TAGS=<tag1>,<tag2>,<tag3>,...]
[TGT_SYSTEM=<system>]
[TGT_SPEC=<spc1>,<spc2>,<spc3>,...]
[OPTION FLAGS]

Make targets:
  help    - You are here.
  install - Install Nix and/or Nix-Darwin. Will not execute on NixOS or Nix-Darwin systems.
  home    - Build and activate a Home-manager configuration.
  system  - Build and activate a NixOS or Nix-Darwin system configuration.
  all     - Execute both the system and home targets in that order.
  test    - Check all flake configurations.

Configuration parameters:
  TGT_USER    - User configuration (current user will be passed by default).
  TGT_HOST    - System configuration host (current hostname will be passed by default).
  TGT_TAGS    - User allows to customizing home-manager user configuration based on tags similar to specialisations for system configurations.
  TGT_SYSTEM  - System platform to target for builds: x86_64-linux, aarch64-linux, x86_64-darwin, or aarch64-darwin (current platform will be passed by default.)
  TGT_SPEC    - Comma separated list of NixOS system specialisation configurations (no spaces).

Option flags (These are boolean, assigning any truthy value will enable them):
Truthy values are 1 yes Yes YES true True TRUE on On ON y Y

Install option flags (install):
  DETERMINATE=true  - Install Nix using the Determinate Systems installer.

  NIX_DARWIN=true   - Install Nix-Darwin for MacOS.

  USE_HOMEBREW=true - Install Homebrew.

  SINGLE_USER=true  - Install Nix for single-user mode (default installer only).

  USE_CACHE=true    - Set a additional cache server URLs to be used as substituters (cache.nixos.org is used by default). This option is defined in make.env as a comma separated list of URLs (no spaces) in order of precedence.

  USE_KEYS=true     - Set additional trusted public keys for nix stores (cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= is used by default). This option is defined in make.env as comma separated list of Nix keyname:keyvalue pairs.

Configuration option flags (home|system|all):
  DRY_RUN=true      - Evaluate the new configuration but don't activate it.

  USE_HOMEBREW=true - Configure Homebrew package options for Nix-Darwin configurations.

  HOME_ALONE=true   - Configure options for a system running home-manager without NixOS or Nix-Darwin (autodetects current system).

  BOOT_SPEC=true    - Set the default boot menu option to the first listed specialisation. (NOTE: Only supports systemd boot configurations.)

Additional option flags (any target):
  KEEP_LOGS=true    - Don't erase logs after operations (for debugging).

Usage examples:
  - Install Nix using the default installer for single-user mode:
    make install SINGLE_USER=Y

  - Install Nix-Darwin using the Determinate Systems installer:
    make install DETERMINATE=1 NIX_DARWIN=y

  - Build and activate the home-manager configuration for the current user using a standalone home-manager configuration; autodetect hostname and system type:
    make home HOME_ALONE=true

  - Build and activate the current system's configuration; autodetect hostname and system platform:
    make system

  - Build and activate the standalone home-manager configuration for user sam on host xps-15, set the tags 'debian' and 'server', and build for an aarch64-linux platform:
    make home user=sam host=xps-15 system=aarch64-linux HOME_ALONE=1 tags=debian,server

  - Rebuild and switch the system configuration for host workstation1; autodetect platform; build specialisation configurations for wayland and x11_egpu; set default boot menu selection to wayland:
    make system host=workstation1 spec=wayland,x11_egpu BOOT_SPEC=1

  - Rebuild and switch the current system's configuration and current user's home-manager configuration; autodetect all settings:
    make all

  - Evaluate the current system's configuration and current user's home-manager config; autodetect all settings:
    make all DRY_RUN=1

  - Run 'nix flake check' for all configurations (current system and user must have a valid configuration):
    make test

