make-nix help

Usage:
make <help|install|home|system|all|test>
[TGT_USER=<user>]
[TGT_HOST=<host>]
[TGT_TAGS=<tag1>,<tag2>,<tag3>,...]
[TGT_SYSTEM=<system>]
[TGT_SPEC=<spc1>,<spc2>,<spc3>,...]
[OPTION FLAGS]

Make targets:
  help    - You are here.
  install - Install Nix and/or Nix-Darwin.
  home    - Build and activate a Home-manager configuration.
  system  - Build and activate a NixOS or Nix-Darwin system configuration.
  all     - Execute both the system and home targets in that order.
  test    - Check all flake configurations.

Configuration parameters:
  TGT_USER    - User configuration (current user will be passed by default).
  TGT_HOST    - System configuration host (current hostname will be passed by default).
  TGT_TAGS    - User allows to customizing home-manager user configuration based on tagssimilar to specialisations for system configurations.
  TGT_SYSTEM  - System platform to target for builds: x86_64-linux, aarch64-linux, x86_64-darwin, or aarch64-darwin 
(current platform will be passed by default.)
  TGT_SPEC    - Comma separated list of system specialisation configurations (no spaces).

Option flags (assigning any value will enable them):

Install target flags:
  DETERMINATE=true  - Install Nix using the Determinate Systems installer.
  NIX_DARWIN=true   - Install Nix-Darwin for MacOS.
  SINGLE_USER=true  - Install Nix for single-user mode.

Configuration target flags:
  DRY_RUN=true      - Evaluate the new configuration but don't activate it.
  HOME_ALONE=true   - Configure options for a system running home-manager without NixOS or Nix-Darwin.
  BOOT_SPEC=true    - Set the default boot menu option to the first listed specialisation. (NOTE: Only supports systemd boot configurations.)

Additional flags:
  KEEP_LOGS=true    - Don't erase logs after operations (for debugging).

Usage examples:
  - Switch the home-manager configuration for current user; autodetect system type:
    make home
  - Switch the home-manager configuration for user joe; autodetect system type:
    make home user=joe
  - Switch the home-manager configuration for user sam; target an aarch64-darwin platform:
    make home user=sam system=aarch64-darwin
  - Rebuild and switch the current system's configuration; autodetect hostname and system platform:
    make system
  - Rebuild and switch the system configuration for host workstation1; target an aarch64-linux platform:
    make system host=workstation1 system=aarch64-linux
  - Rebuild and switch the system configuration for host workstation1; autodetect platform; build specialisation configurations for wayland and x11_egpu; set default boot menu selection to wayland:
    make system host=workstation1 spec=wayland,x11_egpu BOOT_SPEC=1
  - Rebuild and switch the current system's configuration and current user's home-manager configuration; autodetect all settings:
    make all
  - Evaluate the current system's configuration and current user's home-manager config; autodetect all settings:
    make all DRY_RUN=1
  - Rebuild and switch system config and home-manager config for user joe on workstation1 (x86_64-linux):
    make all host=workstation1 system=x86_64-linux user=joe
  - Run 'nix flake check' for all configurations:
    make test
